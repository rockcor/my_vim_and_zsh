
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 用户自定义配置（该文件放一般性配置，可覆盖~/.vimrc里的配置，若要增加、卸载插件，请放入~/.vimrc.custom.plugins）
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
inoremap jk <Esc>
"插入模式下连按jk退出"
" inoremap jj <Esc>A;<Esc>
inoremap jj <end>:<CR>
"插入模式下连按jj跳到行尾加封号"
inoremap uu <Esc>u
"插入模式下连按uu退出并u"
"inoremap ll <Esc>la
"插入模式下ll跳出引号/括号"
inoremap xx <Esc>lxi
"插入模式xx删除光标处字符，弥补backspace的不足"
noremap <space> $
"空格到行尾，也可以用封号"
noremap yj yyp
"普通模式下yj等同与yyp"
noremap yk yyP
" 最好检测当前字符
inoremap <C-e> <Esc>A)

noremap <F2> :set number!<CR>
set nonumber
"<F2>开关行号显示（便于复制到虚拟机外）"
noremap <F3> :set wrap!<CR>
"<F3>开关自动折行（代码比较长用）"
" noremap <F4> ggvG==<Esc><C-o><C-o>zz
noremap <F4> :Autoformat<Esc>zz:w<CR>
"<F4>一键全文格式化"
noremap <leader>1 :w<CR>
",1 保存"
noremap <leader>2 :wa<CR>
noremap <leader>3 :xa<CR>
",2 保存并退出"
noremap <leader>0 :q!<CR>
noremap <leader>9 :bp<BAR>bd#<CR>
nnoremap x "_x
nnoremap c "_c
nnoremap s "_s
nnoremap S "_dd
nnoremap X "_X
" nnoremap <leader>{ o{}<left><CR><CR><up><tab>
vnoremap X "_X
vnoremap x "_x
vnoremap R "_xp
nnoremap m ddp
nnoremap M ddkP
nnoremap <C-m> M
nnoremap <C-h> H
nnoremap <C-l> L
set whichwrap-=<,>,h,l
set clipboard=unnamed
set foldmethod=indent
set foldnestmax=3
" set foldopen=all
" set foldclose=all
" set lines=45 columns=70
" 开启相对行号
" set relativenumber

" 开启鼠标
" set mouse=a
" set nocompatible
" 设置光标所在列高亮
set cursorcolumn
let g:ycm_show_diagnostics_ui = 0
" indentLine 开启代码对齐线
let g:indentLine_enabled = 1

""""""""""""""""""""""
"Quickly Run
""""""""""""""""""""""
map <F5> :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    if &filetype == 'c'
        exec "!g++ % -o %<"
        exec "!time ./%<"
    elseif &filetype == 'cpp'
        exec "!g++ % -o %<"
        exec "!time ./%<"
    elseif &filetype == 'java'
        exec "!javac %"
        exec "!time java %<"
    elseif &filetype == 'sh'
        :!time bash %
    elseif &filetype == 'python'
        exec "!python %"
    elseif &filetype == 'html'
        exec "!firefox % &"
    elseif &filetype == 'go'
        "        exec "!go build %<"
        exec "!time go run %"
    elseif &filetype == 'mkd'
        exec "!~/.vim/markdown.pl % > %.html &"
        exec "!firefox %.html &"
    endif
endfunc
" markdown
" let system = system('uname -s')
" if system == "Darwin\n"
"     let g:mkdp_path_to_chrome = "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome"
" else
"     let g:mkdp_path_to_chrome = '/usr/bin/google-chrome-stable %U'
" endif
" nmap <silent> <F7> <Plug>MarkdownPreview
" imap <silent> <F7> <Plug>MarkdownPreview
" nmap <silent> <F8> <Plug>StopMarkdownPreview
" imap <silent> <F8> <Plug>StopMarkdownPreview

" Doxygen
" let g:DoxygenToolkit_authorName="chxuan, 787280310@qq.com"
" let s:licenseTag = "Copyright(C)\<enter>"
" let s:licenseTag = s:licenseTag . "For free\<enter>"
" let s:licenseTag = s:licenseTag . "All right reserved\<enter>"
" let g:DoxygenToolkit_licenseTag = s:licenseTag
" let g:DoxygenToolkit_briefTag_funcName="yes"
" let g:doxygen_enhanced_color=1
" let g:DoxygenToolkit_commentType="Qt"


